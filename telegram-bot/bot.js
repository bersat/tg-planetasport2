const { Telegraf, session } = require('telegraf');

// === –¢–æ–∫–µ–Ω –∏ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ===
const bot = new Telegraf('7685888546:AAGFM9y_i8i-B7cYY46Sy0iS9Xj5OolHMSE'); // –¢–æ–∫–µ–Ω –±–æ—Ç–∞
const ADMIN_ID = 1875616267; // –¢–≤–æ–π Telegram user ID

// === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ ===
bot.use(session({ defaultSession: () => ({}) }));

// === –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã ===
const faqList = [
    {
        q: "–ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è?",
        a: "–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ—á—Ç—É."
    },
    {
        q: "–ö–∞–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å?",
        a: "–ù–∞–∂–º–∏—Ç–µ '–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?' –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤—Ö–æ–¥–∞ –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º."
    },
    {
        q: "–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π?",
        a: "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞–º —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É /ask –≤ –±–æ—Ç–µ."
    }
];

// === –ö–æ–º–∞–Ω–¥–∞ /start ===
bot.start((ctx) => {
    ctx.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/faq ‚Äì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n/ask ‚Äì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É");
});

// === –ö–æ–º–∞–Ω–¥–∞ /faq ===
bot.command('faq', (ctx) => {
    const message = faqList.map(item => `‚ùì ${item.q}\nüí¨ ${item.a}`).join('\n\n');
    ctx.reply(message);
});

// === –ö–æ–º–∞–Ω–¥–∞ /ask ===
bot.command('ask', (ctx) => {
    ctx.session.awaitingQuestion = true;
    ctx.reply('‚úèÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
});

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
bot.on('text', async (ctx) => {
    const userId = ctx.from.id;

    // 1. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if (userId === ADMIN_ID && ctx.session?.replyTo) {
        const answer = ctx.message.text;
        const targetUserId = ctx.session.replyTo;

        try {
            await bot.telegram.sendMessage(targetUserId, `üí¨ –û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n${answer}`);
            ctx.reply('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.');
        } catch (err) {
            ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç. –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.');
        }

        ctx.session.replyTo = null;
        return;
    }

    // 2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–æ–ø—Ä–æ—Å
    if (ctx.session?.awaitingQuestion) {
        const question = ctx.message.text;
        ctx.session.awaitingQuestion = false;

        const username = ctx.from.username || ctx.from.first_name;

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –∞–¥–º–∏–Ω—É
        await bot.telegram.sendMessage(ADMIN_ID,
            `üì© –í–æ–ø—Ä–æ—Å –æ—Ç @${username} (ID: ${userId}):\n\n${question}`, {
            reply_markup: {
                inline_keyboard: [
                    [{ text: '–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data: `reply_${userId}` }]
                ]
            }
        });

        ctx.reply('‚úÖ –í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
        return;
    }

    // 3. –í—Å–µ –ø—Ä–æ—á–∏–µ —Å–ª—É—á–∞–∏
    ctx.reply('–ù–∞–ø–∏—à–∏—Ç–µ /faq —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ /ask —á—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.');
});

// === –û–±—Ä–∞–±–æ—Ç–∫–∞ inline –∫–Ω–æ–ø–∫–∏ "–û—Ç–≤–µ—Ç–∏—Ç—å" –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ===
bot.on('callback_query', async (ctx) => {
    const data = ctx.callbackQuery.data;

    if (ctx.from.id !== ADMIN_ID) {
        return ctx.answerCbQuery('‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.');
    }

    if (data.startsWith('reply_')) {
        const userId = data.split('_')[1];
        ctx.session.replyTo = userId;
        ctx.reply(`‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID: ${userId}`);
    }

    ctx.answerCbQuery();
});

// === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
bot.launch();
console.log('‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
