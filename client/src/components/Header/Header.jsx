import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom'; // üîπ –¥–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç
import Sidebar from '../Sidebar/Sidebar';
import { FaSearch, FaBars, FaTimes } from 'react-icons/fa';
import './Header.css';

const API_URL = process.env.REACT_APP_API_URL;

function Header() {
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const [isSearchActive, setIsSearchActive] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const [searchResults, setSearchResults] = useState([]);
  const [showSuggestions, setShowSuggestions] = useState(false);

  const navigate = useNavigate(); // üîπ –¥–æ–±–∞–≤–ª–µ–Ω —Ö—É–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

  const toggleSidebar = () => setIsSidebarOpen(!isSidebarOpen);
  const closeSidebar = () => setIsSidebarOpen(false);
  const openSearch = () => setIsSearchActive(true);
  const closeSearch = () => {
    setIsSearchActive(false);
    setSearchQuery('');
    setSearchResults([]);
    setShowSuggestions(false);
  };

  const handleSearchChange = async (e) => {
    const query = e.target.value;
    setSearchQuery(query);

    if (query.length >= 2) {
      try {
        const response = await fetch(`${API_URL}/api/products/search?q=${encodeURIComponent(query)}`);
        const results = await response.json();
        setSearchResults(results);
        setShowSuggestions(true);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ:', error);
        setSearchResults([]);
      }
    } else {
      setSearchResults([]);
      setShowSuggestions(false);
    }
  };

  const handleSearchSubmit = (e) => {
    e.preventDefault();
    console.log('–ü–æ–∏—Å–∫:', searchQuery);
    setShowSuggestions(false);
  };

  // üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥ –∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–æ–≤–∞—Ä–∞
  const handleSuggestionClick = (product) => {
    setSearchQuery('');
    setSearchResults([]);
    setShowSuggestions(false);
    setIsSearchActive(false);  // –°–∫—Ä—ã–≤–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å

    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥ —Å query –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω—É–∂–Ω—ã–π —Ç–æ–≤–∞—Ä
    navigate(`/catalog?productId=${product.id}`);
  };

  return (
    <>
      {/* –ü–æ–∏—Å–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className={`top-search-bar ${isSearchActive ? 'active' : ''}`}>
        <form onSubmit={handleSearchSubmit} className="top-search-form">
          <input
            type="text"
            placeholder="–ü–æ–∏—Å–∫..."
            value={searchQuery}
            onChange={handleSearchChange}
          />
          <button type="button" className="close-search" onClick={closeSearch}>
            <FaTimes />
          </button>
        </form>

        {/* üîπ –ë–ª–æ–∫ —Å –ø–æ–¥—Å–∫–∞–∑–∫–∞–º–∏ */}
        {showSuggestions && searchResults.length > 0 && (
          <div className="search-suggestions">
            {searchResults.map((item) => (
              <div
                key={item.id}
                className="suggestion-item"
                onClick={() => handleSuggestionClick(item)}
                style={{ cursor: 'pointer' }}
              >
                <img src={item.image_url} alt={item.title} />
                <div className="suggestion-info">
                  <div className="name">{item.title}</div>
                  <div className="price">{item.price}‚ÇΩ</div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* –®–∞–ø–∫–∞ */}
      <header className="header">
        <div className="header-left">
          <button className="sidebar-toggle" onClick={toggleSidebar}>
            <FaBars />
          </button>
        </div>
        <div className="header-center">
          <h1>–õ–æ–≥–æ—Ç–∏–ø</h1>
        </div>
        <div className="header-right">
          <button className="search-icon" onClick={openSearch}>
            <FaSearch />
          </button>
        </div>
      </header>

      <Sidebar isOpen={isSidebarOpen} onClose={closeSidebar} />
    </>
  );
}

export default Header;
